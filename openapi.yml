openapi: 3.0.3

info:
  title: Eventor API
  description: |
    Eventor API
  version: "1.0.0"
  termsOfService: https://eventor.orientering.se/Home/About
  contact:
    name: Eventor
    url: https://eventor.orienteering.org/api/documentation

servers:
  - url: https://eventor.orientering.no/api
    description: Norwegian Eventor API
  - url: https://eventor.orientering.se/api
    description: Swedish Eventor API
  - url: https://eventor.orienteering.asn.au/api
    description: Australian Eventor API
  - url: https://eventor.orienteering.org/api
    description: International Eventor API

security:
  - ApiKeyAuth: []

paths:
  /events:
    get:
      summary: Returns a list with the events matching the search parameters.
      parameters:
        - in: query
          name: fromDate
          schema:
            type: string
            default: '0000-01-01 00:00:00'
          description: Start time (yyyy-mm-dd hh:mm:ss).
        - in: query
          name: toDate
          schema:
            type: string
            default: '9999-12-31 23:59:59'
          description: End time (yyyy-mm-dd hh:mm:ss).
        - in: query
          name: fromModifyDate
          schema:
            type: string
            default: '0000-01-01 00:00:00'
          description: Includes only events that have changed after this time (yyyy-mm-dd hh:mm:ss).
        - in: query
          name: toModifyDate
          schema:
            type: string
            default: '9999-12-31 23:59:59'
          description: Includes only events that have changed before this time (yyyy-mm-dd hh:mm:ss).
        - in: query
          name: eventIds
          schema:
            type: string
            example: 8248,15365
          description: Comma-separated list of event IDs. Omit to include all events.
        - in: query
          name: organisationIds
          schema:
            type: string
            example: 273,89
          description: Comma-separated list of organisation IDs for the organising clubs. If a state's organisation ID is specified, all events organised by a club in that state will be included. Omit to include all events.
        - in: query
          name: classificationIds
          schema:
            type: string
            example: 4,5
          description: Comma-separated list of event classification IDs, where 1=championship event, 2=national event, 3=state event, 4=local event, 5=club event. Omit to include all events.
        - in: query
          name: includeEntryBreaks
          schema:
            type: boolean
            default: false
          description: Set to `true` to include the entry deadlines of the event.
        - in: query
          name: includeAttributes
          schema:
            type: boolean
            default: false
          description: Set to `true` to include the event's event attributes.
        - in: query
          name: parentIds
          schema:
            type: string
            example: 1,2
          description: If filtering on parent events, comma-separated list of IDs for parent events.
      responses:
        '200':
          description: XML element `EventList`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/eventList'
  /events/documents:
    get:
      summary: Returns a list with documents for the events matching the search parameters.
      parameters:
        - in: query
          name: fromDate
          schema:
            type: string
            default: '0000-01-01 00:00:00'
          description: Start time (yyyy-mm-dd hh:mm:ss).
        - in: query
          name: toDate
          schema:
            type: string
            default: '9999-12-31 23:59:59'
          description: End time (yyyy-mm-dd hh:mm:ss).
        - in: query
          name: eventIds
          schema:
            type: string
            example: 8248,15365
          description: Comma-separated list of event IDs. Omit to include all events.
        - in: query
          name: organisationIds
          schema:
            type: string
            example: 273,89
          description: Comma-separated list of organisation IDs for the organising clubs. If a state's organisation ID is specified, all events organised by a club in that state will be included. Omit to include all events.
      responses:
        '200':
          description: XML element `DocumentList`
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/eventDocument'
  /event/{eventId}:
    get:
      summary: Returns an event.
      parameters:
        - in: path
          name: eventId
          schema:
            type: integer
            example: 8248
          required: true
          description: The ID of the event as specified by `/events`.
      responses:
        '200':
          description: XML element `Event`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/eventList/properties/event'
  /eventclasses:
    get:
      summary: Returns all classes in an event.
      parameters:
        - in: query
          name: eventId
          schema:
            type: integer
            example: 8248
          required: true
          description: The ID of the event as specified by `/events`.
        - in: query
          name: includeEntryFees
          schema:
            type: boolean
            example: false
          description: Set to `true` to include IDs and application order for the entry fees of the classes.
      responses:
        '200':
          description: XML element `EventClassList`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/classList'
  /entryfees/events/{eventId}:
    get:
      summary: Returns all entry fees in an event.
      parameters:
        - in: path
          name: eventId
          schema:
            type: integer
            example: 8248
          required: true
          description: The ID of the event as specified by `/events`.
      responses:
        '200':
          description: XML element `EntryFeeList`
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/fee_'
  /organisation/apiKey:
    get:
      summary: Returns the organisation that the specified API key belongs to.
      responses:
        '200':
          description: XML element `Organisation`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organisation_'
  /organisations:
    get:
      summary: Returns a list with all organisations (federations, state associations and clubs).
      parameters:
        - in: query
          name: includeProperties
          schema:
            type: boolean
            default: false
          description: Set to `true` to include extended information about the organisations.
      responses:
        '200':
          description: XML element `OrganisationList`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/competitorList/properties/competitor/items/properties/organisation'
  /organisation/{id}:
    get:
      summary: Returns an organisation (federation, state association or club).
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            example: 273
          required: true
          description: The ID of the organisation.
      responses:
        '200':
          description: XML element `Organisation`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organisation_'
  /persons/organisations/{organisationId}:
    get:
      summary: Returns all persons that are members of an organisation.
      parameters:
        - in: path
          name: organisationId
          schema:
            type: integer
            example: 273
          required: true
          description: The ID of the organisation as specified by `/organisations`. This parameter must be set to the own organisation's ID.
        - in: query
          name: includeContactDetails
          schema:
            type: boolean
            default: false
          description: Set to `true` to include the members' addresses, phone numbers and email addresses.
      responses:
        '200':
          description: XML element `PersonList`
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/person'
  /competitors:
    get:
      summary: Returns event settings (punching card numbers, pre-selected classes) for all persons that have specified these settings within an organisation.
      parameters:
        - in: query
          name: organisationId
          schema:
            type: integer
            example: 273
          required: true
          description: The ID of the organisation as specified by `/organisations`. This parameter must be set to the own organisation's ID.
      responses:
        '200':
          description: XML element `CompetitorList`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/competitorList'
  /externalLoginUrl:
    get:
      summary: Returns a link that can be used to redirect a person from an external website to logged-in mode in Eventor. The link can only be used once and is forfeited after five minutes. Useful when a club has a website solution with its own login system. **Caution!** Make sure to use this method in such a way that only authorized users in the external system will have access to the redirect link!
      parameters:
        - in: query
          name: personId
          schema:
            type: integer
            example: 1
          required: true
          description: The ID of the person as specified by `/persons/organisations/{organisationId}`. The person must be a member of the organisation specified by organisationId.
        - in: query
          name: organisationId
          schema:
            type: integer
            example: 273
          required: true
          description: The ID of the organisation as specified by `/organisations`. This parameter must be set to the own organisation's ID.
        - in: query
          name: includeContactDetails
          schema:
            type: boolean
            default: false
          description: Set to `true` to include the members' addresses, phone numbers and email addresses.
      responses:
        '200':
          description: XML element `ExternalLoginUrl`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/externalLogin'
  /authenticatePerson:
    get:
      summary: Returns the person matching the specified user name and password.
      parameters:
        - in: header
          name: Username
          schema:
            type: string
            example: OlaNordmann
          required: true
          description: The person's user name i Eventor.
        - in: header
          name: Password
          schema:
            type: string
            example: 0r13nt3r1n5
          required: true
          description: The person's password i Eventor.
      responses:
        '200':
          description: XML element `Person`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/person'
  /entries:
    get:
      summary: Returns persons entered to an event as specified by the search parameters.
      parameters:
        - in: query
          name: organisationIds
          schema:
            type: string
            example: 273,89
          description: Comma-separated list with IDs as specified by `/organisations` for the organisation that entries is to be fetched for. Omit to include all organisations.
        - in: query
          name: eventIds
          schema:
            type: string
            example: 8248,15365
          description: Comma-separated list with event IDs as specified by `/events`. Omit to include all events.
        - in: query
          name: eventClassIds
          schema:
            type: string
            example: '2'
          description: Comma-separated list with class IDs as specified by `/eventclasses`. Omit to include all classes.
        - in: query
          name: fromEventDate
          schema:
            type: string
            default: '0000-01-01 00:00:00'
          description: Gets entries from events organised at this or later times (yyyy-mm-dd hh:mm:ss).
        - in: query
          name: toEventDate
          schema:
            type: string
            default: '9999-12-31 23:59:59'
          description: Gets entries from events organised at this or earlier times (yyyy-mm-dd hh:mm:ss).
        - in: query
          name: fromEntryDate
          schema:
            type: string
            default: '0000-01-01 00:00:00'
          description: Gets entries that are made at this time or later (yyyy-mm-dd hh:mm:ss).
        - in: query
          name: toEntryDate
          schema:
            type: string
            default: '9999-12-31 23:59:59'
          description: Gets entries that are made at this time or earlier (yyyy-mm-dd hh:mm:ss).
        - in: query
          name: fromModifyDate
          schema:
            type: string
            default: '0000-01-01 00:00:00'
          description: Gets entries that have changed at this time or later (yyyy-mm-dd hh:mm:ss).
        - in: query
          name: toModifyDate
          schema:
            type: string
            default: '9999-12-31 23:59:59'
          description: Gets entries that are changed at this time or earlier (yyyy-mm-dd hh:mm:ss).
        - in: query
          name: includeEntryFees
          schema:
            type: boolean
            default: false
          description: Set to `true` to include entry fee information.
        - in: query
          name: includePersonElement
          schema:
            type: boolean
            default: false
          description: Set to `true` to include complete person information insted of just a person ID.
        - in: query
          name: includeOrganisationElement
          schema:
            type: boolean
            example: false
          description: Set to `true` to include complete organisation information insted of just an organisation ID.
        - in: query
          name: includeEventElement
          schema:
            type: boolean
            example: false
          description: Set to `true` to include complete event information insted of just an event ID.
      responses:
        '200':
          description: XML element `EntryList`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entryList'
  /competitorcount:
    get:
      summary: Returns the number of entries as given by the search parameters.
      parameters:
        - in: query
          name: organisationIds
          schema:
            type: string
            example: 273,89
          required: true
          description: Comma-separated list with IDs as specified by `/organisations` for the organisation that entries is to be fetched for.
        - in: query
          name: eventIds
          schema:
            type: string
            example: 8248,15365
          description: Comma-separated list with event IDs as specified by `/events`. Omit to include all events.
        - in: query
          name: personIds
          schema:
            type: string
            example: '1'
          description: Comma-separated list with personIDs as specified by `/persons/organisations/{organisationId}`. The persons must be members in the organisation specified by organisationIds.
      responses:
        '200':
          description: XML element `CompetitorCountList`
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/competitorCount'
  /starts/event:
    get:
      summary: Returns start times for an event.
      parameters:
        - in: query
          name: eventId
          schema:
            type: integer
            example: 8248
          required: true
          description: Event ID as specified by `/events`.
      responses:
        '200':
          description: XML element `StartList`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/startList'
  /starts/person:
    get:
      summary: Returns start times for a person in a number of events.
      parameters:
        - in: query
          name: personId
          schema:
            type: integer
            example: 1
          required: true
          description: Person ID as specified by `/persons/organisations/{organisationId}`.
        - in: query
          name: eventIds
          schema:
            type: string
            example: 8248,15365
          description: Comma-separated list with event IDs as specified by `/events`. Omit to include all events.
        - in: query
          name: fromDate
          schema:
            type: string
            default: '0000-01-01 00:00:00'
          description: Includes events organised this or later times (yyyy-mm-dd hh:mm:ss).
        - in: query
          name: toDate
          schema:
            type: string
            default: '9999-12-31 23:59:59'
          description: Includes events organised this or earlier times (yyyy-mm-dd hh:mm:ss).
      responses:
        '200':
          description: XML element `StartListList`
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/startList'
  /starts/organisation:
    get:
      summary: Returns start times for an organisation's (club's) competitors in an event.
      parameters:
        - in: query
          name: organisationIds
          schema:
            type: string
            example: 273,89
          required: true
          description: Comma-separated list with IDs as specified by `/organisations` for the organisations that start times are to be fetched for. This parameter must be set to the own organisation's ID.
        - in: query
          name: eventId
          schema:
            type: integer
            example: 8248
          required: true
          description: The ID of the event as specified by `/events`.
      responses:
        '200':
          description: XML element `StartList`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/startList'
  /results/event:
    get:
      summary: Returns results for an event.
      parameters:
        - in: query
          name: eventId
          schema:
            type: integer
            example: 8248
          description: The ID of the event as specified by `/events`.
        - in: query
          name: includeSplitTimes
          schema:
            type: boolean
            example: false
          description: Set to `true` to include split times.
        - in: query
          name: top
          schema:
            type: integer
            example: 50
          description: Only returns this number of competitors from the top of the result list. Omit to include all competitors.
      responses:
        '200':
          description: XML element `ResultList`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resultList'
  /results/person:
    get:
      summary: Returns results for a person in a number of events.
      parameters:
        - in: query
          name: personId
          schema:
            type: integer
            example: 1
          description: Person ID as specified by `/persons/organisations/{organisationId}`.
        - in: query
          name: eventIds
          schema:
            type: string
            example: 8248,15365
          description: Comma-separated list with event IDs as specified by `/events`. Omit to include all events.
        - in: query
          name: fromDate
          schema:
            type: string
            default: '0000-01-01 00:00:00'
          description: Includes events organised this or later times (yyyy-mm-dd hh:mm:ss).
        - in: query
          name: toDate
          schema:
            type: string
            default: '9999-12-31 23:59:59'
          description: Includes events organised this or earlier times (yyyy-mm-dd hh:mm:ss).
        - in: query
          name: includeSplitTimes
          schema:
            type: boolean
            example: false
          description: Set to `true` to include split times.
        - in: query
          name: top
          schema:
            type: integer
            example: 50
          description: Returns, besides the specified person, only this number of competitors from the top of the result list. Omit to include the specified person only.
      responses:
        '200':
          description: XML element `ResultListList`
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/resultList'
  /results/organisation:
    get:
      summary: Returns results for an organisation's (club's) competitors in an event.
      parameters:
        - in: query
          name: organisationIds
          schema:
            type: string
            example: 273,89
          required: true
          description: Comma-separated list with IDs as specified by `/organisations` for the organisations that start times are to be fetched for. This parameter must be set to the own organisation's ID.
        - in: query
          name: eventId
          schema:
            type: integer
            example: 8248
          required: true
          description: The ID of the event as specified by `/events`.
        - in: query
          name: includeSplitTimes
          schema:
            type: boolean
            example: false
          description: Set to `true` to include split times.
        - in: query
          name: top
          schema:
            type: integer
            example: 50
          description: Returns, besides the specified organisation's competitors, only this number of competitors from the top of each class' result list. Omit to include the specified organisation's comeptitors only.
      responses:
        '200':
          description: XML element `ResultList`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resultList'
  /activities:
    get:
      summary: Returns all activities for an organisation (club) in a given period of time.
      parameters:
        - in: query
          name: organisationId
          schema:
            type: integer
            example: 273
          required: true
          description: The ID of the organisation as specified by `/organisations`. This parameter must be set to the own organisation's ID.
        - in: query
          name: from
          schema:
            type: string
            example: '1000-01-01 00:00:00'
          required: true
          description: The start of the time period (yyyy-mm-dd hh:mm:ss).
        - in: query
          name: to
          schema:
            type: string
            example: '9999-12-31 23:59:59'
          required: true
          description: The end of the time period (yyyy-mm-dd hh:mm:ss).
        - in: query
          name: includeRegistrations
          schema:
            type: boolean
            default: false
          description: Set to `true` to include registrastions for the activities.
      responses:
        '200':
          description: XML element `ActivityList`
          content:
            application/xml:
              schema:
                type: string
  /activity:
    get:
      summary: Returns an activity.
      parameters:
        - in: query
          name: organisationId
          schema:
            type: integer
            example: 273
          required: true
          description: The ID of the organisation as specified by `/organisations`. This parameter must be set to the own organisation's ID.
        - in: query
          name: id
          schema:
            type: integer
            example: 1
          required: true
          description: The ID of the activity as specified by by `/activities`.
        - in: query
          name: includeRegistrations
          schema:
            type: boolean
            default: false
          description: Set to `true` to include registrastions for the activities.
      responses:
        '200':
          description: XML element `Activity`
          content:
            application/xml:
              schema:
                type: string
  /competitor/{personId}:
    get:
      summary: Returns a person's event settings (e.g. pre-selected classes and punching card numbers).
      parameters:
        - in: path
          name: personId
          schema:
            type: integer
            example: 1
          required: true
          description: The ID of the person as specified by `/persons/organisations/{organisationId}`. The person must be a member of the organisation whose API key is used.
      responses:
        '200':
          description: XML element `Competitor`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/competitor_'
  /competitor:
    put:
      summary: Saves a person's event settings (e.g. pre-selected classes and punching card numbers).
      requestBody:
        description: The event settings for the person specified as a `Competitor` object. The person must be a member of the organisation whose API key is used.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/competitor_'
      responses:
        '200':
          description: XML element `Competitor`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/competitor_'
  /export/competitors:
    get:
      summary: Returns all persons that are members for given organisations
      parameters:
        - in: query
          name: organisationIds
          schema:
            type: string
            example: 273,89
          required: false
          description: Comma-separated list with IDs as specified by `/organisations` for the organisations that competitors are to be fetched for. Omit to include all competitors.
        - in: query
          name: version
          schema:
            type: string
            example: '3.0'
          required: false
          description: IOF XSD version, `2.0` or `3.0`
        - in: query
          name: includePreselectedClasses
          schema:
            type: boolean
            example: false
          description: Should preselected classes be included for each competitor.
        - in: query
          name: zip
          schema:
            type: boolean
            example: false
          description: Set to `true` to return a zip file of the result.
      responses:
        '200':
          description: XML element `CompetitorList`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/competitorList'
  /import/startlist:
    post:
      summary: Import start list for event
      parameters: []
      requestBody:
        description: XML element `StartList`
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/startList'
      responses:
        '200':
          description: XML element `StartList`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/startList'
  /import/resultlist:
    post:
      summary: Import result list for event
      parameters: []
      responses:
        '200':
          description: XML element `ImportResultListResult`
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/importResultListResult'
      requestBody:
        description: XML element `ResultList`
        required: true
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/resultList'
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: ApiKey
      in: header
  schemas:
    competitorList:
      type: object
      properties:
        iofVersion:
          type: string
        createTime:
          type: integer
          format: utc-millisec
        creator:
          type: string
        competitor:
          type: array
          items:
            $ref: '#/components/schemas/competitor_'
        extensions:
          type: object
          $ref: '#/components/schemas/extensions'
    organisationList:
      type: object
      properties:
        iofVersion:
          type: string
        createTime:
          type: integer
          format: utc-millisec
        creator:
          type: string
        organisation:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/organisation_'
        extensions:
          type: object
          $ref: '#/components/schemas/extensions'
    eventList:
      type: object
      properties:
        iofVersion:
          type: string
        createTime:
          type: integer
          format: utc-millisec
        creator:
          type: string
        event:
          type: array
          items:
            $ref: '#/components/schemas/event_'
        extensions:
          type: object
          $ref: '#/components/schemas/extensions'
    classList:
      type: object
      properties:
        iofVersion:
          type: string
        createTime:
          type: integer
          format: utc-millisec
        creator:
          type: string
        clazz:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/clazz_'
        extensions:
          type: object
          $ref: '#/components/schemas/extensions'
    entryList:
      type: object
      properties:
        iofVersion:
          type: string
        createTime:
          type: integer
          format: utc-millisec
        creator:
          type: string
        event:
          type: object
          $ref: '#/components/schemas/event_'
        teamEntry:
          type: array
          items:
            type: object
            properties:
              id:
                type: object
                $ref: '#/components/schemas/id_'
              name:
                type: string
              organisation:
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/organisation_'
              teamEntryPerson:
                type: array
                items:
                  type: object
                  properties:
                    person:
                      type: object
                      $ref: '#/components/schemas/person'
                    organisation:
                      type: object
                      $ref: '#/components/schemas/organisation_'
                    leg:
                      type: integer
                    legOrder:
                      type: integer
                    controlCard:
                      type: array
                      items:
                        type: object
                        $ref: '#/components/schemas/controlCard_'
                    score:
                      type: array
                      items:
                        type: object
                        $ref: '#/components/schemas/score_'
                    assignedFee:
                      type: array
                      items:
                        $ref: '#/components/schemas/assignedFee_'
                    extensions:
                      type: object
                      $ref: '#/components/schemas/extensions'
              clazz:
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/clazz_'
              race:
                type: array
                items:
                  type: integer
              assignedFee:
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/assignedFee_'
              serviceRequest:
                type: array
                items:
                  $ref: '#/components/schemas/serviceRequest_'
              startTimeAllocationRequest:
                $ref: '#/components/schemas/startTimeAllocationRequest'
              contactInformation:
                type: string
              entryTime:
                type: integer
                format: utc-millisec
              extensions:
                type: object
                $ref: '#/components/schemas/extensions'
              modifyTime:
                type: integer
                format: utc-millisec
        personEntry:
          type: array
          items:
            type: object
            properties:
              id:
                type: object
                $ref: '#/components/schemas/id_'
              person:
                type: object
                $ref: '#/components/schemas/person'
              organisation:
                type: object
                $ref: '#/components/schemas/organisation_'
              controlCard:
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/controlCard_'
              score:
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/score_'
              clazz:
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/clazz_'
              raceNumber:
                type: array
                items:
                  type: integer
              assignedFee:
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/assignedFee_'
              serviceRequest:
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/serviceRequest_'
              startTimeAllocationRequest:
                type: object
                $ref: '#/components/schemas/startTimeAllocationRequest'
              entryTime:
                type: integer
                format: utc-millisec
              extensions:
                type: object
                $ref: '#/components/schemas/extensions'
              modifyTime:
                type: integer
                format: utc-millisec
        extensions:
          type: object
          $ref: '#/components/schemas/extensions'
    courseData:
      type: object
      properties:
        iofVersion:
          type: string
        createTime:
          type: integer
          format: utc-millisec
        creator:
          type: string
        event:
          type: object
          $ref: '#/components/schemas/event_'
        raceCourseData:
          type: array
          items:
            type: object
            properties:
              map:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: object
                      $ref: '#/components/schemas/id_'
                    image:
                      type: object
                      $ref: '#/components/schemas/logotype_'
                    scale:
                      type: number
                    mapPositionTopLeft:
                      type: object
                      $ref: '#/components/schemas/mapPosition'
                    mapPositionBottomRight:
                      type: object
                      $ref: '#/components/schemas/mapPosition'
                    extensions:
                      type: object
                      $ref: '#/components/schemas/extensions'
              control:
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/onlineControl_'
              course:
                type: array
                items:
                  $ref: '#/components/schemas/course_'
              classCourseAssignment:
                type: array
                items:
                  type: object
                  properties:
                    classId:
                      type: object
                      $ref: '#/components/schemas/id_'
                    className:
                      type: string
                    allowedOnLeg:
                      type: array
                      items:
                        type: integer
                    courseName:
                      type: string
                    courseFamily:
                      type: string
                    extensions:
                      type: object
                      $ref: '#/components/schemas/extensions'
                    numberOfCompetitors:
                      type: integer
              personCourseAssignment:
                type: array
                items:
                  type: object
                  properties:
                    entryId:
                      type: object
                      $ref: '#/components/schemas/id_'
                    bibNumber:
                      type: string
                    personName:
                      type: string
                    className:
                      type: string
                    courseName:
                      type: string
                    courseFamily:
                      type: string
                    extensions:
                      type: object
                      $ref: '#/components/schemas/extensions'
              teamCourseAssignment:
                type: array
                items:
                  type: object
                  properties:
                    bibNumber:
                      type: string
                    teamName:
                      type: string
                    className:
                      type: string
                    teamMemberCourseAssignment:
                      type: array
                      items:
                        type: object
                        properties:
                          entryId:
                            type: object
                            $ref: '#/components/schemas/id_'
                          bibNumber:
                            type: string
                          leg:
                            type: integer
                          legOrder:
                            type: integer
                          teamMemberName:
                            type: string
                          courseName:
                            type: string
                          courseFamily:
                            type: string
                          extensions:
                            type: object
                            $ref: '#/components/schemas/extensions'
                    extensions:
                      type: object
                      $ref: '#/components/schemas/extensions'
              extensions:
                type: object
                $ref: '#/components/schemas/extensions'
              raceNumber:
                type: integer
        extensions:
          type: object
          $ref: '#/components/schemas/extensions'
    startList:
      type: object
      properties:
        iofVersion:
          type: string
        createTime:
          type: integer
          format: utc-millisec
        creator:
          type: string
        event:
          type: object
          $ref: '#/components/schemas/event_'
        classStart:
          type: array
          items:
            type: object
            properties:
              clazz:
                type: object
                $ref: '#/components/schemas/clazz_'
              course:
                type: array
                items:
                  $ref: '#/components/schemas/simpleRaceCourse'
              startName:
                type: array
                items:
                  type: object
                  properties:
                    value:
                      type: string
                    raceNumber:
                      type: integer
              personStart:
                type: array
                items:
                  type: object
                  properties:
                    entryId:
                      type: object
                      $ref: '#/components/schemas/id_'
                    person:
                      type: object
                      $ref: '#/components/schemas/person'
                    organisation:
                      type: object
                      $ref: '#/components/schemas/organisation_'
                    start:
                      type: array
                      items:
                        type: object
                        properties:
                          bibNumber:
                            type: string
                          startTime:
                            type: integer
                            format: utc-millisec
                          course:
                            type: object
                            $ref: '#/components/schemas/simpleCourse'
                          controlCard:
                            type: array
                            items:
                              type: object
                              $ref: '#/components/schemas/controlCard_'
                          assignedFee:
                            type: array
                            items:
                              type: object
                              $ref: '#/components/schemas/assignedFee_'
                          serviceRequest:
                            type: array
                            items:
                              type: object
                              $ref: '#/components/schemas/serviceRequest_'
                          extensions:
                            type: object
                            $ref: '#/components/schemas/extensions'
                          raceNumber:
                            type: integer
                    extensions:
                      type: object
                      $ref: '#/components/schemas/extensions'
                    modifyTime:
                      type: integer
                      format: utc-millisec
              teamStart:
                type: array
                items:
                  type: object
                  properties:
                    entryId:
                      type: object
                      $ref: '#/components/schemas/id_'
                    name:
                      type: string
                    organisation:
                      type: array
                      items:
                        type: object
                        $ref: '#/components/schemas/organisation_'
                    bibNumber:
                      type: string
                    teamMemberStart:
                      type: array
                      items:
                        type: object
                        properties:
                          entryId:
                            type: object
                            $ref: '#/components/schemas/id_'
                          person:
                            type: object
                            $ref: '#/components/schemas/person'
                          organisation:
                            type: object
                            $ref: '#/components/schemas/organisation_'
                          start:
                            type: array
                            items:
                              type: object
                              properties:
                                leg:
                                  type: integer
                                legOrder:
                                  type: integer
                                bibNumber:
                                  type: string
                                startTime:
                                  type: integer
                                  format: utc-millisec
                                course:
                                  type: object
                                  $ref: '#/components/schemas/simpleCourse'
                                controlCard:
                                  type: array
                                  items:
                                    type: object
                                    $ref: '#/components/schemas/controlCard_'
                                assignedFee:
                                  type: array
                                  items:
                                    type: object
                                    $ref: '#/components/schemas/assignedFee_'
                                serviceRequest:
                                  type: array
                                  items:
                                    type: object
                                    $ref: '#/components/schemas/serviceRequest_'
                                extensions:
                                  type: object
                                  $ref: '#/components/schemas/extensions'
                                raceNumber:
                                  type: integer
                          extensions:
                            type: object
                            $ref: '#/components/schemas/extensions'
                          modifyTime:
                            type: integer
                            format: utc-millisec
                    assignedFee:
                      type: array
                      items:
                        type: object
                        $ref: '#/components/schemas/assignedFee_'
                    serviceRequest:
                      type: array
                      items:
                        type: object
                        $ref: '#/components/schemas/serviceRequest_'
                    extensions:
                      type: object
                      $ref: '#/components/schemas/extensions'
                    modifyTime:
                      type: integer
                      format: utc-millisec
              extensions:
                type: object
                $ref: '#/components/schemas/extensions'
              timeResolution:
                type: number
              modifyTime:
                type: integer
                format: utc-millisec
        extensions:
          type: object
          $ref: '#/components/schemas/extensions'
    resultList:
      type: object
      properties:
        iofVersion:
          type: string
        createTime:
          type: integer
          format: utc-millisec
        creator:
          type: string
        event:
          type: object
          $ref: '#/components/schemas/event_'
        classResult:
          type: array
          items:
            type: object
            properties:
              clazz:
                type: object
                $ref: '#/components/schemas/clazz_'
              course:
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/simpleRaceCourse'
              personResult:
                type: array
                items:
                  type: object
                  properties:
                    entryId:
                      type: object
                      $ref: '#/components/schemas/id_'
                    person:
                      type: object
                      $ref: '#/components/schemas/person'
                    organisation:
                      type: object
                      $ref: '#/components/schemas/organisation_'
                    result:
                      type: array
                      items:
                        type: object
                        properties:
                          bibNumber:
                            type: string
                          startTime:
                            type: integer
                            format: utc-millisec
                          finishTime:
                            type: integer
                            format: utc-millisec
                          time:
                            type: number
                          timeBehind:
                            type: number
                          position:
                            type: integer
                          status:
                            type: string
                            enum:
                              - OK
                              - FINISHED
                              - MISSING_PUNCH
                              - DISQUALIFIED
                              - DID_NOT_FINISH
                              - ACTIVE
                              - INACTIVE
                              - OVER_TIME
                              - SPORTING_WITHDRAWAL
                              - NOT_COMPETING
                              - MOVED
                              - MOVED_UP
                              - DID_NOT_START
                              - DID_NOT_ENTER
                              - CANCELLED
                          score:
                            type: array
                            items:
                              type: object
                              $ref: '#/components/schemas/score_'
                          overallResult:
                            $ref: '#/components/schemas/overallResult'
                          course:
                            type: object
                            $ref: '#/components/schemas/simpleCourse'
                          splitTime:
                            type: array
                            items:
                              $ref: '#/components/schemas/splitTime_'
                          controlAnswer:
                            type: array
                            items:
                              $ref: '#/components/schemas/controlAnswer_'
                          route:
                            $ref: '#/components/schemas/route'
                          controlCard:
                            type: array
                            items:
                              type: object
                              $ref: '#/components/schemas/controlCard_'
                          assignedFee:
                            type: array
                            items:
                              type: object
                              $ref: '#/components/schemas/assignedFee_'
                          serviceRequest:
                            type: array
                            items:
                              type: object
                              $ref: '#/components/schemas/serviceRequest_'
                          extensions:
                            type: object
                            $ref: '#/components/schemas/extensions'
                          raceNumber:
                            type: integer
                    extensions:
                      type: object
                      $ref: '#/components/schemas/extensions'
                    modifyTime:
                      type: integer
                      format: utc-millisec
              teamResult:
                type: array
                items:
                  type: object
                  properties:
                    entryId:
                      type: object
                      $ref: '#/components/schemas/id_'
                    name:
                      type: string
                    organisation:
                      type: array
                      items:
                        type: object
                        $ref: '#/components/schemas/organisation_'
                    bibNumber:
                      type: string
                    teamMemberResult:
                      type: array
                      items:
                        type: object
                        properties:
                          entryId:
                            type: object
                            $ref: '#/components/schemas/id_'
                          person:
                            type: object
                            $ref: '#/components/schemas/person'
                          organisation:
                            type: object
                            $ref: '#/components/schemas/organisation_'
                          result:
                            type: array
                            items:
                              type: object
                              properties:
                                leg:
                                  type: integer
                                legOrder:
                                  type: integer
                                bibNumber:
                                  type: string
                                startTime:
                                  type: integer
                                  format: utc-millisec
                                finishTime:
                                  type: integer
                                  format: utc-millisec
                                time:
                                  type: number
                                timeBehind:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      value:
                                        type: number
                                      type:
                                        type: string
                                position:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      value:
                                        type: integer
                                      type:
                                        type: string
                                status:
                                  type: string
                                  enum:
                                    - OK
                                    - FINISHED
                                    - MISSING_PUNCH
                                    - DISQUALIFIED
                                    - DID_NOT_FINISH
                                    - ACTIVE
                                    - INACTIVE
                                    - OVER_TIME
                                    - SPORTING_WITHDRAWAL
                                    - NOT_COMPETING
                                    - MOVED
                                    - MOVED_UP
                                    - DID_NOT_START
                                    - DID_NOT_ENTER
                                    - CANCELLED
                                score:
                                  type: array
                                  items:
                                    type: object
                                    $ref: '#/components/schemas/score_'
                                overallResult:
                                  type: object
                                  $ref: '#/components/schemas/overallResult'
                                course:
                                  type: object
                                  $ref: '#/components/schemas/simpleCourse'
                                splitTime:
                                  type: array
                                  items:
                                    type: object
                                    $ref: '#/components/schemas/splitTime_'
                                controlAnswer:
                                  type: array
                                  items:
                                    type: object
                                    $ref: '#/components/schemas/controlAnswer_'
                                route:
                                  type: object
                                  $ref: '#/components/schemas/route'
                                controlCard:
                                  type: array
                                  items:
                                    type: object
                                    $ref: '#/components/schemas/controlCard_'
                                assignedFee:
                                  type: array
                                  items:
                                    type: object
                                    $ref: '#/components/schemas/assignedFee_'
                                serviceRequest:
                                  type: array
                                  items:
                                    type: object
                                    $ref: '#/components/schemas/serviceRequest_'
                                extensions:
                                  type: object
                                  $ref: '#/components/schemas/extensions'
                                raceNumber:
                                  type: integer
                          extensions:
                            type: object
                            $ref: '#/components/schemas/extensions'
                          modifyTime:
                            type: integer
                            format: utc-millisec
                    assignedFee:
                      type: array
                      items:
                        type: object
                        $ref: '#/components/schemas/assignedFee_'
                    serviceRequest:
                      type: array
                      items:
                        type: object
                        $ref: '#/components/schemas/serviceRequest_'
                    extensions:
                      type: object
                      $ref: '#/components/schemas/extensions'
              extensions:
                type: object
                $ref: '#/components/schemas/extensions'
              timeResolution:
                type: number
              modifyTime:
                type: integer
                format: utc-millisec
        extensions:
          type: object
          $ref: '#/components/schemas/extensions'
        status:
          type: string
    serviceRequestList:
      type: object
      properties:
        iofVersion:
          type: string
        createTime:
          type: integer
          format: utc-millisec
        creator:
          type: string
        event:
          type: object
          $ref: '#/components/schemas/event_'
        organisationServiceRequest:
          type: array
          items:
            type: object
            properties:
              organisation:
                type: object
                $ref: '#/components/schemas/organisation_'
              serviceRequest:
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/serviceRequest_'
              personServiceRequest:
                type: array
                items:
                  $ref: '#/components/schemas/personServiceRequest_'
        personServiceRequest:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/personServiceRequest_'
        extensions:
          type: object
          $ref: '#/components/schemas/extensions'
    controlCardList:
      type: object
      properties:
        iofVersion:
          type: string
        createTime:
          type: integer
          format: utc-millisec
        creator:
          type: string
        owner:
          type: string
        controlCard:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/controlCard_'
        extensions:
          type: object
          $ref: '#/components/schemas/extensions'
    extensions:
      type: object
      properties:
        any:
          type: array
          items: {}
    person:
      type: object
      properties:
        id:
          type: array
          items:
            $ref: '#/components/schemas/id_'
        name:
          type: object
          properties:
            family:
              type: string
            given:
              type: string
        birthDate:
          type: integer
          format: utc-millisec
        nationality:
          $ref: '#/components/schemas/nationality'
        address:
          type: array
          items:
            $ref: '#/components/schemas/address_'
        contact:
          type: array
          items:
            $ref: '#/components/schemas/contact_'
        sex:
          type: string
        modifyTime:
          type: integer
          format: utc-millisec
    contact_:
      type: object
      properties:
        value:
          type: string
        type:
          type: string
        modifyTime:
          type: integer
          format: utc-millisec
    address_:
      type: object
      properties:
        careOf:
          type: string
        street:
          type: string
        zipCode:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: object
          $ref: '#/components/schemas/nationality'
        type:
          type: string
        modifyTime:
          type: integer
          format: utc-millisec
    id_:
      type: object
      properties:
        value:
          type: string
        type:
          type: string
    nationality:
      type: object
      properties:
        value:
          type: string
        code:
          type: string
    position:
      type: object
      properties:
        lng:
          type: number
        lat:
          type: number
        alt:
          type: number
    organisation_:
        type: object
        properties:
          id:
            type: object
            $ref: '#/components/schemas/id_'
          name:
            type: string
          shortName:
            type: string
          mediaName:
            type: string
          parentOrganisationId:
            type: integer
          country:
            type: object
            $ref: '#/components/schemas/nationality'
          address:
            type: array
            items:
              type: object
              $ref: '#/components/schemas/address_'
          contact:
            type: array
            items:
              type: object
              $ref: '#/components/schemas/contact_'
          position:
            $ref: '#/components/schemas/position'
          account:
            type: array
            items:
              $ref: '#/components/schemas/account_'
          role:
            type: array
            items:
              $ref: '#/components/schemas/role_'
          logotype:
            type: array
            items:
              $ref: '#/components/schemas/logotype_'
          extensions:
            type: object
            $ref: '#/components/schemas/extensions'
          type:
            type: string
          modifyTime:
            type: integer
            format: utc-millisec
    account_:
      type: object
      properties:
        value:
          type: string
        type:
          type: string
    clazz_:
      type: object
      properties:
        id:
          type: object
          $ref: '#/components/schemas/id_'
        name:
          type: string
        shortName:
          type: string
        classType:
          type: array
          items:
            type: object
            properties:
              id:
                type: object
                $ref: '#/components/schemas/id_'
              name:
                type: string
              modifyTime:
                type: integer
                format: utc-millisec
        leg:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              extensions:
                type: object
                $ref: '#/components/schemas/extensions'
              minNumberOfCompetitors:
                type: integer
              maxNumberOfCompetitors:
                type: integer
        teamFee:
          type: array
          items:
            $ref: '#/components/schemas/fee_'
        fee:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/fee_'
        status:
          type: string
          enum:
            - NORMAL
            - DIVIDED
            - JOINED
            - INVALIDATED
            - INVALIDATED_NO_FEE
        raceClass:
          type: array
          items:
            type: object
            properties:
              punchingSystem:
                type: array
                items:
                  type: string
              teamFee:
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/fee_'
              fee:
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/fee_'
              firstStart:
                type: integer
                format: utc-millisec
              status:
                type: string
                enum:
                  - START_TIMES_NOT_ALLOCATED
                  - START_TIMES_ALLOCATED
                  - NOT_USED
                  - COMPLETED
                  - INVALIDATED
                  - INVALIDATED_NO_FEE
              course:
                type: array
                items:
                  $ref: '#/components/schemas/simpleCourse'
              onlineControl:
                type: array
                items:
                  $ref: '#/components/schemas/onlineControl_'
              extensions:
                type: object
                $ref: '#/components/schemas/extensions'
              raceNumber:
                type: integer
              maxNumberOfCompetitors:
                type: integer
              modifyTime:
                type: integer
                format: utc-millisec
        tooFewEntriesSubstituteClass:
          type: object
          $ref: '#/components/schemas/clazz_'
        tooManyEntriesSubstituteClass:
          type: object
          $ref: '#/components/schemas/clazz_'
        extensions:
          type: object
          $ref: '#/components/schemas/extensions'
        minAge:
          type: integer
        maxAge:
          type: integer
        sex:
          type: string
        minNumberOfTeamMembers:
          type: integer
        maxNumberOfTeamMembers:
          type: integer
        minTeamAge:
          type: integer
        maxTeamAge:
          type: integer
        numberOfCompetitors:
          type: integer
        maxNumberOfCompetitors:
          type: integer
        resultListMode:
          type: string
        modifyTime:
          type: integer
          format: utc-millisec
    dateTime:
      type: object
      properties:
        date:
          type: integer
          format: utc-millisec
        time:
          type: integer
          format: utc-millisec
    languageString:
      type: object
      properties:
        value:
          type: string
        language:
          type: string
    role_:
      type: object
      properties:
        person:
          type: object
          $ref: '#/components/schemas/person'
        type:
          type: string
    competitor_:
      type: object
      properties:
        person:
          $ref: '#/components/schemas/person'
        organisation:
          type: array
          items:
            $ref: '#/components/schemas/organisation_'
        controlCard:
          type: array
          items:
            $ref: '#/components/schemas/controlCard_'
        clazz:
          type: array
          items:
            $ref: '#/components/schemas/clazz_'
        score:
          type: array
          items:
            $ref: '#/components/schemas/score_'
        extensions:
          type: object
          $ref: '#/components/schemas/extensions'
        modifyTime:
          type: integer
          format: utc-millisec
    score_:
      type: object
      properties:
        value:
          type: number
        type:
          type: string
    amount:
      type: object
      properties:
        value:
          type: number
        currency:
          type: string
    fee_:
      type: object
      properties:
        id:
          type: object
          $ref: '#/components/schemas/id_'
        name:
          type: array
          items:
            $ref: '#/components/schemas/languageString'
        amount:
          $ref: '#/components/schemas/amount'
        taxableAmount:
          type: object
          $ref: '#/components/schemas/amount'
        percentage:
          type: number
        taxablePercentage:
          type: number
        validFromTime:
          type: integer
          format: utc-millisec
        validToTime:
          type: integer
          format: utc-millisec
        fromDateOfBirth:
          type: integer
          format: utc-millisec
        toDateOfBirth:
          type: integer
          format: utc-millisec
        extensions:
          type: object
          $ref: '#/components/schemas/extensions'
        type:
          type: string
        modifyTime:
          type: integer
          format: utc-millisec
    assignedFee_:
      type: object
      properties:
        fee:
          type: object
          $ref: '#/components/schemas/fee_'
        paidAmount:
          type: object
          $ref: '#/components/schemas/amount'
        extensions:
          type: object
          $ref: '#/components/schemas/extensions'
        modifyTime:
          type: integer
          format: utc-millisec
    controlCard_:
      type: object
      properties:
        value:
          type: string
        punchingSystem:
          type: string
        modifyTime:
          type: integer
          format: utc-millisec
    mapPosition:
      type: object
      properties:
        x:
          type: number
        'y':
          type: number
        unit:
          type: string
    serviceRequest_:
      type: object
      properties:
        id:
          type: object
          $ref: '#/components/schemas/id_'
        service:
          type: object
          $ref: '#/components/schemas/service_'
        requestedQuantity:
          type: number
        deliveredQuantity:
          type: number
        comment:
          type: string
        assignedFee:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/assignedFee_'
        extensions:
          type: object
          $ref: '#/components/schemas/extensions'
        modifyTime:
          type: integer
          format: utc-millisec
    startTimeAllocationRequest:
      type: object
      properties:
        organisation:
          type: object
          $ref: '#/components/schemas/organisation_'
        person:
          type: object
          $ref: '#/components/schemas/person'
        type:
          type: string
    service_:
      type: object
      properties:
        id:
          type: object
          $ref: '#/components/schemas/id_'
        name:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/languageString'
        fee:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/fee_'
        description:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/languageString'
        maxNumber:
          type: number
        requestedNumber:
          type: number
        extensions:
          type: object
          $ref: '#/components/schemas/extensions'
        type:
          type: string
        modifyTime:
          type: integer
          format: utc-millisec
    personServiceRequest_:
      type: object
      properties:
        person:
          type: object
          $ref: '#/components/schemas/person'
        serviceRequest:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/serviceRequest_'
    course_:
      type: object
      properties:
        id:
          type: object
          $ref: '#/components/schemas/id_'
        name:
          type: string
        courseFamily:
          type: string
        length:
          type: number
        climb:
          type: number
        courseControl:
          type: array
          items:
            type: object
            properties:
              control:
                type: array
                items:
                  type: string
              mapText:
                type: string
              mapTextPosition:
                type: object
                $ref: '#/components/schemas/mapPosition'
              legLength:
                type: number
              score:
                type: number
              extensions:
                type: object
                $ref: '#/components/schemas/extensions'
              type:
                type: string
                enum:
                  - CONTROL
                  - START
                  - FINISH
                  - CROSSING_POINT
                  - END_OF_MARKED_ROUTE
              randomOrder:
                type: boolean
              specialInstruction:
                type: string
              tapedRouteLength:
                type: number
              modifyTime:
                type: integer
                format: utc-millisec
        mapId:
          type: integer
        extensions:
          type: object
          $ref: '#/components/schemas/extensions'
        numberOfCompetitors:
          type: integer
        modifyTime:
          type: integer
          format: utc-millisec
    simpleCourse:
      type: object
      properties:
        id:
          type: object
          $ref: '#/components/schemas/id_'
        name:
          type: string
        courseFamily:
          type: string
        length:
          type: number
        climb:
          type: number
        numberOfControls:
          type: integer
    simpleRaceCourse:
      type: object
      properties:
        id:
          type: object
          $ref: '#/components/schemas/id_'
        name:
          type: string
        courseFamily:
          type: string
        length:
          type: number
        climb:
          type: number
        numberOfControls:
          type: integer
        raceNumber:
          type: integer
    logotype_:
      type: object
      properties:
        value:
          type: array
          items:
            type: integer
        url:
          type: string
        mediaType:
          type: string
        width:
          type: integer
        height:
          type: integer
        resolution:
          type: number
    onlineControl_:
      type: object
      properties:
        id:
          type: object
          $ref: '#/components/schemas/id_'
        punchingUnitId:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/id_'
        name:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/languageString'
        position:
          type: object
          $ref: '#/components/schemas/position'
        mapPosition:
          $ref: '#/components/schemas/mapPosition'
        extensions:
          type: object
          $ref: '#/components/schemas/extensions'
        type:
          type: string
          enum:
            - CONTROL
            - START
            - FINISH
            - CROSSING_POINT
            - END_OF_MARKED_ROUTE
        modifyTime:
          type: integer
          format: utc-millisec
    event_:
      type: object
      properties:
        id:
          type: object
          $ref: '#/components/schemas/id_'
        name:
          type: string
        startTime:
          $ref: '#/components/schemas/dateTime'
        endTime:
          $ref: '#/components/schemas/dateTime'
        status:
          type: string
          enum:
            - PLANNED
            - APPLIED
            - PROPOSED
            - SANCTIONED
            - CANCELED
            - RESCHEDULED
        classification:
          type: string
          enum:
            - INTERNATIONAL
            - NATIONAL
            - REGIONAL
            - LOCAL
            - CLUB
        form:
          type: array
          items:
            type: string
            enum:
              - INDIVIDUAL
              - TEAM
              - RELAY
        organiser:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/organisation_'
        official:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/role_'
        clazz:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/clazz_'
        race:
          type: array
          items:
            type: object
            properties:
              raceNumber:
                type: integer
              name:
                type: string
              startTime:
                type: object
                $ref: '#/components/schemas/dateTime'
              endTime:
                type: object
                $ref: '#/components/schemas/dateTime'
              status:
                type: string
                enum:
                  - PLANNED
                  - APPLIED
                  - PROPOSED
                  - SANCTIONED
                  - CANCELED
                  - RESCHEDULED
              classification:
                type: string
                enum:
                  - INTERNATIONAL
                  - NATIONAL
                  - REGIONAL
                  - LOCAL
                  - CLUB
              position:
                type: object
                $ref: '#/components/schemas/position'
              discipline:
                type: array
                items:
                  type: string
                  enum:
                    - SPRINT
                    - MIDDLE
                    - LONG
                    - ULTRALONG
                    - OTHER
              organiser:
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/organisation_'
              official:
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/role_'
              service:
                type: array
                items:
                  $ref: '#/components/schemas/service_'
              url:
                type: array
                items:
                  $ref: '#/components/schemas/url_'
              extensions:
                type: object
                $ref: '#/components/schemas/extensions'
              modifyTime:
                type: integer
                format: utc-millisec
        entryReceiver:
          type: object
          properties:
            address:
              type: array
              items:
                type: object
                $ref: '#/components/schemas/address_'
            contact:
              type: array
              items:
                type: object
                $ref: '#/components/schemas/contact_'
        service:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/service_'
        account:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/account_'
        url:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/url_'
        information:
          type: array
          items:
            $ref: '#/components/schemas/information_'
        schedule:
          type: array
          items:
            type: object
            properties:
              startTime:
                type: integer
                format: utc-millisec
              endTime:
                type: integer
                format: utc-millisec
              name:
                type: string
              venue:
                type: string
              position:
                type: object
                $ref: '#/components/schemas/position'
              details:
                type: string
              modifyTime:
                type: integer
                format: utc-millisec
        news:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/information_'
        extensions:
          type: object
          $ref: '#/components/schemas/extensions'
        modifyTime:
          type: integer
          format: utc-millisec
    url_:
      type: object
      properties:
        value:
          type: string
        type:
          type: string
    information_:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        modifyTime:
          type: integer
          format: utc-millisec
    overallResult:
      type: object
      properties:
        time:
          type: number
        timeBehind:
          type: number
        position:
          type: integer
        status:
          type: string
          enum:
            - OK
            - FINISHED
            - MISSING_PUNCH
            - DISQUALIFIED
            - DID_NOT_FINISH
            - ACTIVE
            - INACTIVE
            - OVER_TIME
            - SPORTING_WITHDRAWAL
            - NOT_COMPETING
            - MOVED
            - MOVED_UP
            - DID_NOT_START
            - DID_NOT_ENTER
            - CANCELLED
        score:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/score_'
        extensions:
          type: object
          $ref: '#/components/schemas/extensions'
    splitTime_:
      type: object
      properties:
        controlCode:
          type: string
        time:
          type: number
        extensions:
          type: object
          $ref: '#/components/schemas/extensions'
        status:
          type: string
    controlAnswer_:
      type: object
      properties:
        answer:
          type: string
        correctAnswer:
          type: string
        time:
          type: number
        extensions:
          type: object
          $ref: '#/components/schemas/extensions'
    route:
      type: object
      properties:
        value:
          type: array
          items:
            type: integer
    eventDocument:
      type: object
      properties:
        id:
          type: string
        referenceId:
          description: The event ID this document belongs to
          type: string
        name:
          description: Name of document
          type: string
        url:
          type: string
        type:
          $ref: '#/components/schemas/eventDocumentType'
        modifyDate:
          example: '2017-10-01T23:59:24'
          type: string
    eventDocumentType:
      type: string
      enum:
        - Invitation
        - Other
    externalLogin:
      type: object
      properties:
        externalLoginUrl:
          type: string
    competitorCount:
      type: object
      properties:
        eventId:
          type: string
        numberOfEntries:
          type: integer
        numberOfStarts:
          type: integer
        organisationCompetitorCount:
          $ref: '#/components/schemas/organisationCompetitorCount'
    organisationCompetitorCount:
      type: object
      properties:
        organisationId:
          type: string
        numberOfEntries:
          type: integer
        numberOfStarts:
          type: integer
    importResultListResult:
      type: object
      properties:
        resultListUrl:
          type: string
        splitTimeListUrl:
          type: string
